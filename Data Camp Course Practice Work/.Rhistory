cor.test(total.videos$view.count, total.videos$title.disclosure)
corr.test(total.videos, use = "complete")
corr.test(total.videos, use = "pairwise")
View(tanyaADvideos)
tanyaAd<-tanyaADvideos[,3:6]
View(tanyaAd)
emilyAD<-emilyADvideos[,3:6]
annaAD<-annaADvideos[,3:6]
total.ad.videos<-rbind(tanyaAd,emilyAD,annaAD)
anUNAD<-AnnaUnSponsored[,3:6]
View(anUNAD)
View(annaAD)
emilyUNAD<-Emilyunsponsored[,3:6]
tanyaUNAD<-tanysunsponsored[,3:6]
total.not.sponsored<-rbind(anUNAD,emilyUNAD,tanyaUNAD)
View(total.videos)
View(total.not.sponsored)
View(total.ad.videos)
t.test(mean(total.ad.videos$view.count), mean(total.not.sponsored$view.count), paired = TRUE)
install.packages("MASS")
library(MASS)
sapply(total.ad.videos["view.count"], total.not.sponsored["view.count"], function(x) c(mean=mean(x), sd=sd(x)))
sapply(total.ad.videos["view.count"], function(x) c(mean=mean(x), sd=sd(x)))
X1<-sapply(total.ad.videos["view.count"], function(x) c(mean=mean(x), sd=sd(x)))
X1<-sapply(total.not.sponsored["view.count"], function(x) c(mean=mean(x), sd=sd(x)))
X1<-sapply(total.ad.videos["view.count"], function(x) c(mean=mean(x), sd=sd(x)))
X2<-sapply(total.not.sponsored["view.count"], function(x) c(mean=mean(x), sd=sd(x)))
View(X1)
View(X2)
View(X1)
View(X2)
t.test(X1,X2. paired = true )
t.test(X1,X2,  paired = true )
t.test(X1,X2,  paired = TRUE
t.test(X1,X2,  paired = TRUE)
t.test(X1,X2)
X1<-sapply(total.ad.videos["likes.count"], function(x) c(mean=mean(x), sd=sd(x)))
X2<-sapply(total.not.sponsored["likes.count"], function(x) c(mean=mean(x), sd=sd(x)))
t.test(X1,X2)
View(X1)
View(X2)
View(total.ad.videos)
total.not.sponsored.complete<-total.not.sponsored[complete.cases(total.not.sponsored),]
X2<-sapply(total.not.sponsored.complete["likes.count"], function(x) c(mean=mean(x), sd=sd(x)))
t.test(X1,X2)
X1<-sapply(total.ad.videos["dislikes.count"], function(x) c(mean=mean(x), sd=sd(x)))
X2<-sapply(total.not.sponsored.complete["dislikes.count"], function(x) c(mean=mean(x), sd=sd(x)))
t.test(X1,X2)
X1<-sapply(total.ad.videos["comments.count"], function(x) c(mean=mean(x), sd=sd(x)))
X2<-sapply(total.not.sponsored.complete["comments.count"], function(x) c(mean=mean(x), sd=sd(x)))
t.test(X1,X2)
total.videos.complese<-total.videos[complete.cases(total.videos),]
total.videos.complete<-total.videos[complete.cases(total.videos),]
overall.fit<-lm(view.count~title.disclosure, data = total.videos.complete)
summary(overall.fit)
overall.fit<-lm(likes.count~title.disclosure, data = total.videos.complete)
summary(overall.fit)
overall.fit<-lm(dislikes.count~title.disclosure, data = total.videos.complete)
summary(overall.fit)
overall.fit<-lm(comments.count~title.disclosure, data = total.videos.complete)
summary(overall.fit)
summary(AD)
summary(annaAD)
View(AnnaUnSponsored)
Annanotsponsored<-AnnaUnSponsored[,3:7]
summary(Annanotsponsored)
x<-AnnaEditTotalVideos[,c("view.count", "likes.count", "dislikes.count", "comments.count")]
y<-AnnaEditTotalVideos[,c("title.disclosure")]
cor(x,y, use = "complete.obs")
X1<-sapply(annaADvideos["view.count"], function(x) c(mean=mean(x), sd=sd(x)))
X2<-sapply(AnnaUnSponsored["view.count"], function(x) c(mean=mean(x), sd=sd(x)))
t.test(X1,X2)
X1<-sapply(annaADvideos["likes.count"], function(x) c(mean=mean(x), sd=sd(x)))
X2<-sapply(AnnaUnSponsored["likes.count"], function(x) c(mean=mean(x), sd=sd(x)))
t.test(X1,X2)
X1<-sapply(annaADvideos["dislikes.count"], function(x) c(mean=mean(x), sd=sd(x)))
X2<-sapply(AnnaUnSponsored["dislikes.count"], function(x) c(mean=mean(x), sd=sd(x)))
t.test(X1,X2)
X1<-sapply(annaADvideos["comments.count"], function(x) c(mean=mean(x), sd=sd(x)))
X2<-sapply(AnnaUnSponsored["comments.count"], function(x) c(mean=mean(x), sd=sd(x)))
t.test(X1,X2)
fit<-lm(view.count~title.disclosure, data = AnnaEditTotalVideos)
summary(overall.fit)
summary(fit)
fit<-lm(likes.count~title.disclosure, data = AnnaEditTotalVideos)
summary(fit)
fit<-lm(dislikes.count~title.disclosure, data = AnnaEditTotalVideos)
summary(fit)
fit<-lm(comments.count~title.disclosure, data = AnnaEditTotalVideos)
summary(fit)
summary(emilyAD)
summary(emilyUNAD)
x<-emilytotalvideos[,c("view.count", "likes.count", "dislikes.count", "comments.count")]
y<-emilytotalvideos[,c("title.disclosure")]
cor(x,y, use = "complete.obs")
X1<-sapply(emilyAD["view.count"], function(x) c(mean=mean(x), sd=sd(x)))
X2<-sapply(Emilyunsponsored["view.count"], function(x) c(mean=mean(x), sd=sd(x)))
t.test(X1,X2)
X1<-sapply(emilyAD["likes.count"], function(x) c(mean=mean(x), sd=sd(x)))
X2<-sapply(Emilyunsponsored["likes.count"], function(x) c(mean=mean(x), sd=sd(x)))
t.test(X1,X2)
X1<-sapply(emilyAD["dislikes.count"], function(x) c(mean=mean(x), sd=sd(x)))
X2<-sapply(Emilyunsponsored["dislikes.count"], function(x) c(mean=mean(x), sd=sd(x)))
t.test(X1,X2)
X1<-sapply(emilyAD["comments.count"], function(x) c(mean=mean(x), sd=sd(x)))
X2<-sapply(Emilyunsponsored["comments.count"], function(x) c(mean=mean(x), sd=sd(x)))
t.test(X1,X2)
fit<-lm(view.count~title.disclosure, data = emilytotalvideos)
summary(fit)
fit<-lm(likes.count~title.disclosure, data = emilytotalvideos)
summary(fit)
fit<-lm(dislikes.count~title.disclosure, data = emilytotalvideos)
summary(fit)
fit<-lm(comments.count~title.disclosure, data = emilytotalvideos)
summary(fit)
fit<-lm(comments.count~title.disclosure, data = emilytotalvideos)
summary(fit)
library(readr)
total_videos <- read_csv("~/Desktop/Dissertation material /total.videos.csv",
col_types = cols(PublishedAt = col_date(format = "%d/%m/%Y"),
title.disclosure = col_logical()))
View(total_videos)
fit<-lm(view.count~title.disclosure+sub.number+channel.view.number, data = total_videos))
fit<-lm(view.count~title.disclosure+sub.number+channel.view.number, data = total_videos)
summary(fit)
fit<-lm(view.count~title.disclosure+sub.number, data = total_videos)
summary(fit)
total_videos_complete<-total_videos[complete.cases(total_videos),]
overall.fit<-lm(likes.count~title.disclosure+sub.number, data = total_videos_complete)
summary(overall.fit)
overall.fit<-lm(dislikes.count~title.disclosure+sub.number, data = total_videos_complete)
summary(overall.fit)
View(total_videos_complete)
overall.fit<-lm(comments.count~title.disclosure+sub.number, data = total_videos_complete)
summary(overall.fit)
summary(tanyaAd)
summary(tanyaUNAD)
>
#correlation
tanyatotalvideos<-tanyatotalvideos[complete.cases(tanyatotalvideos),]
x<-tanyatotalvideos[,c("view.count", "likes.count", "dislikes.count", "comments.count")]
y<-tanyatotalvideos[,c("title.disclosure")]
cor(x,y, use = "complete.obs")
X1<-sapply(tanyaAd["view.count"], function(x) c(mean=mean(x), sd=sd(x)))
X2<-sapply(tanyaUNAD["view.count"], function(x) c(mean=mean(x), sd=sd(x)))
t.test(X1,X2)
X1<-sapply(tanyaAd["likes.count"], function(x) c(mean=mean(x), sd=sd(x)))
X2<-sapply(tanyaUNAD["likes.count"], function(x) c(mean=mean(x), sd=sd(x)))
t.test(X1,X2)
tanya.unsponsored<-tanyaUNAD[complete.cases(tanyaUNAD),]
X2<-sapply(tanya.unsponsored["likes.count"], function(x) c(mean=mean(x), sd=sd(x)))
t.test(X1,X2)
X1<-sapply(tanyaAd["dislikes.count"], function(x) c(mean=mean(x), sd=sd(x)))
X2<-sapply(tanya.unsponsored["dislikes.count"], function(x) c(mean=mean(x), sd=sd(x)))
t.test(X1,X2)
X1<-sapply(tanyaAd["comments.count"], function(x) c(mean=mean(x), sd=sd(x)))
X2<-sapply(tanya.unsponsored["comments.count"], function(x) c(mean=mean(x), sd=sd(x)))
t.test(X1,X2)
tanya_total_videos<-tanyatotalvideos[complete.cases(tanyatotalvideos),]
fit<-lm(view.count~title.disclosure, data = tanya_total_videos)
summary(fit)
fit<-lm(likes.count~title.disclosure, data = tanya_total_videos)
summary(fit)
fit<-lm(likes.count~title.disclosure, data = tanya_total_videos)
summary(fit)
fit<-lm(dislikes.count~title.disclosure, data = tanya_total_videos)
summary(fit)
fit<-lm(comments.count~title.disclosure, data = tanya_total_videos)
summary(fit)
x<-total_videos[,c("view.count", "likes.count", "dislikes.count", "comments.count","sub.number","channel.view.number")]
y<-total.videos[,c("title.disclosure")]
cor(x,y, use = "complete.obs")
y<-total_videos[,c("title.disclosure")]
cor(x,y, use = "complete.obs")
sumamry(total_videos)
summary(total_videos)
X1<-sapply(total.ad.videos["view.count"], function(x) c(mean=mean(x), sd=sd(x)))
X2<-sapply(total.not.sponsored["view.count"], function(x) c(mean=mean(x), sd=sd(x)))
plot(total_videos$view.count, total_videos$PublishedAt)
plot(total_videos$PublishedAt, total_videos$view.count)
ts<-ts(total_videos$view.count)
plot(ts)
x<-mean(annaAD$view.count)
y<-mean(tanyaAd$view.count)
z<-mean(emilyAD$view.count)
barplot(x,y,z)
overall.fit<-lm(dislikes.count~title.disclosure+sub.number, data = total_videos_complete)
summary(overall.fit)
overall.fit<-lm(dislikes.count~title.disclosure, data = total_videos_complete)
summary(overall.fit)
plot(total_videos_complete$title.disclosure, total_videos_complete$dislikes.count)
abline(overall.fit)
plot(total_videos_complete$dislikes.count, total_videos_complete$title.disclosure)
abline
plot(total_videos_complete$sub.number, total_videos_complete$view.count)
plot(total_videos_complete$title.disclosure, total_videos_complete$dislikes.count, type = "b")
scatterplot(total_videos_complete$title.disclosure, total_videos_complete$dislikes.count, type = "b")
scatterplot(total_videos_complete$title.disclosure, total_videos_complete$dislikes.count)
install.packages("car")
library(car)
scatterplot(total_videos_complete$title.disclosure, total_videos_complete$dislikes.count)
View(total.videos)
View(total.videos.complete)
View(total_videos_complete)
View(AnnaEditTotalVideos)
AnnaEditTotalVideos<- AnnaEditTotalVideos[,1:7]
View(emilytotalvideos)
View(tanya_total_videos)
barplot(total_videos_complete$dislikes.count, total_videos_complete$title.disclosure)
barplot(total_videos_complete$title.disclosure, total_videos_complete$dislikes.count)
barplot(total_videos_complete$dislikes.count, total_videos_complete$title.disclosure)
barplot(x,y,z)
summary(total_videos_complete)
summary(total_videos)
sd(total_videos$view.count)
install.packages("vcd")
library(vcd)
sponsored<-table(total_videos$title.disclosure)
sponsored
barplot(sponsored, main = "Total Sponsored Videos VS Total Non-Sponsored Videos (2015-2017"),
barplot(sponsored, main = "Total Sponsored Videos VS Total Non-Sponsored Videos (2015-2017)")
meanviews<-table(mean(total.ad.videos$view.count), mean(total.not.sponsored$view.count))
meanviews
barplot(meanviews,main = "Mean View Count: ESV vs NESV")
meanAD<-mean(total.ad.videos$view.count)
mean<-mean(total.not.sponsored$view.count)
means<-data.frame(meanAD, mean)
means
barplot(means, main = "Mean View Count: ESV vs NESV")
means<-data.frame(meanAD, mean)
means<-table(means)
means
barplot(means, main = "Mean View Count: ESV vs NESV")
means<-aggregate(total_videos_complete$view.count, by=list(title.disclosure), FUN=mean)
means<-aggregate(total_videos_complete$view.count, by=col(title.disclosure), FUN=mean)
means<-aggregate(total_videos_complete$view.count, by="title.disclosure", FUN=mean)
list<-list(total_videos$title.disclosure)
means<-aggregate(total_videos_complete$view.count, by=list, FUN=mean)
means<-aggregate(total_videos$view.count, FUN=mean)
barplot(mean, meanAD)
mean
x<- 286970.9
meanAD
y<-257380.9
barplot(x,y)
plot(x,y)
hist(x,y)
hist(total_videos$view.count)
means<-aggregate(total_videos$title.disclosure, by=list(view.count), FUN=mean)
help("aggregate")
install.packages("ggplot2")
library(ggplot2)
mean
meanAD
ggplot(total_videos, aes(x=title.disclosure, y=view.count)) + geom_boxplot()
View(total_videos)
View(tanysunsponsored)
View(total_videos)
ggplot(total_videos, aes(x=title.disclosure, y=view.count), xlab) + geom_boxplot()
ggplot(total_videos, aes(x=title.disclosure, y=view.count), xlab="Title Disclosure", ylab="View Count") + geom_boxplot()
ggplot(total_videos, aes(x=title.disclosure, y=likes.count)) + geom_boxplot()
ggplot(total_videos, aes(x=title.disclosure, y=dislikes.count)) + geom_boxplot()
ggplot(total_videos, aes(x=title.disclosure, y=comments.count)) + geom_boxplot()
X1<-sapply(total.ad.videos["view.count"], function(x) c(mean=mean(x), sd=sd(x)))
X2<-sapply(total_videos["view.count"], function(x) c(mean=mean(x), sd=sd(x)))
t.test(X1,X2)
mean(total_videos$likes.count)
mean(total_videos_complete$likes.count)
mean(total.not.sponsored.complete)
mean(total.not.sponsored.complete$likes.count)
mean(total.ad.videos$likes.count)
mea(total.not.sponsored.complete$view.count)
mean(total.not.sponsored.complete$view.count)
mean(total.ad.videos$view.count)
mean(total.ad.videos$dislikes.count)
mean(total.ad.videos$comments.count)
mean(total.not.sponsored.complete$comments.count)
mean(total.not.sponsored.complete$dislikes.count)
sponsored<-table(tanya_total_videos$title.disclosure)
barplot(sponsored, main Channel 1 ESV vs NESV (2015-2017))
barplot(sponsored, main="Channel 1 ESV vs NESV (2015-2017)")
mean(tanya_total_videos$view.count)
mean(tanya_total_videos$likes.count)
mean(tanyaAd$view.count)
mean(tanyaAd$likes.count)
mean(tanyaAd$dislikes.count)
mean(tanyaAd$comments.count)
mean(tanya.unsponsored$view.count)
mean(tanya.unsponsored$likes.count)
mean(tanya.unsponsored$dislikes.count)
mean(tanya.unsponsored$comments.count)
sponsored<-table(emilytotalvideos$title.disclosure)
barplot(sponsored, main = "Channel 2 ESV VS NESV (2015-2017)")
sponsored<-table(AnnaEditTotalVideos$title.disclosure)
barplot(sponsored, main = "Channel 2 ESV VS NESV (2015-2017)")
barplot(sponsored, main = "Channel 3 ESV VS NESV (2015-2017)")
mean(emilyAD$view.count)
mean(emilyAD$likes.count)
mean(emilyAD$dislikes.count)
mean(emilyAD$comments.count)
mean(emilyUNAD$comments.count)
mean(emilyUNAD$dislikes.count)
mean(emilyUNAD$likes.count)
mean(emilyUNAD$view.count)
mean(annaAD$view.count)
mean(annaAD$likes.count)
mean(annaAD$dislikes.count)
mean(annaAD$comments.count)
mean(Annanotsponsored$view.count)
mean(Annanotsponsored$likes.count)
mean(Annanotsponsored$dislikes.count)
mean(Annanotsponsored$comments.count)
X1<-sapply(total.ad.videos["view.count"], function(x) c(mean=mean(x), sd=sd(x)))
X2<-sapply(total.not.sponsored["view.count"], function(x) c(mean=mean(x), sd=sd(x)))
t.test(X1,X2)
ViewESV<-sapply(total.ad.videos["view.count"], function(x) c(mean=mean(x), sd=sd(x)))
ViewNESV<-sapply(total.not.sponsored["view.count"], function(x) c(mean=mean(x), sd=sd(x)))
t.test(X1,X2)
total.not.sponsored.complete<-total.not.sponsored[complete.cases(total.not.sponsored),]
X1<-sapply(total.ad.videos["likes.count"], function(x) c(mean=mean(x), sd=sd(x)))
X2<-sapply(total.not.sponsored.complete["likes.count"], function(x) c(mean=mean(x), sd=sd(x)))
t.test(X1,X2)
library(readr)
AnnaEditTotalVideos <- read_csv("~/Desktop/Dissertation material /AnnaEditTotalVideos.csv")
View(AnnaEditTotalVideos)
library(readr)
emilytotalvideos <- read_csv("~/Desktop/Dissertation material /emilytotalvideos.csv")
View(emilytotalvideos)
library(readr)
tanyatotalvideos <- read_csv("~/Desktop/Dissertation material /tanyatotalvideos.csv")
View(tanyatotalvideos)
library(readr)
total_videos <- read_csv("~/Desktop/Dissertation material /total.videos.csv")
View(total_videos)
total.videos
total_videos
total_videos<-total_videos[complete.cases(total_videos),]
total_videos
logreg<-glm(title.disclosure~view.count+likes.count+dislikes.count+comments.count, family = "binomial")
logreg<-glm(title.disclosure~view.count+likes.count+dislikes.count+comments.count, family = "binomial", data = total_videos)
summary(logreg)
logreg<-glm(title.disclosure~view.count+dislikes.count, family = "binomial", data = total_videos)
summary(logreg)
install.packages("pscl")
library("pscl")
pr2(logreg)
pR2(logreg)
> summary(logreg)
summary(logreg)
logreg<-glm(title.disclosure~view.count+likes.count+dislikes.count+comments.count, family = "binomial", data = tanyatotalvideos)
summary(logreg)
logreg<-glm(title.disclosure~view.count+dislikes.count, family = "binomial", data = tanyatotalvideos)
summary(logreg)
pR2(logreg)
logreg<-glm(title.disclosure~view.count+likes.count+dislikes.count+comments.count, family = "binomial", data = emilytotalvideos)
summary(logreg)
logreg<-glm(title.disclosure~dislikes.count, family = "binomial", data = emilytotalvideos)
summary(logreg)
pR2(logreg)
logreg<-glm(title.disclosure~view.count+likes.count+dislikes.count+comments.count, family = "binomial", data = AnnaEditTotalVideos)
summary(logreg)
logreg<-glm(title.disclosure~dislikes.count+view.count+comments.count, family = "binomial", data = emilytotalvideos)
summary(logreg)
logreg<-glm(title.disclosure~dislikes.count+view.count, family = "binomial", data = emilytotalvideos)
summary(logreg)
logreg<-glm(title.disclosure~dislikes.count+view.count+comments.count, family = "binomial", data = AnnaEditTotalVideos)
summary(logreg)
overall.fit<-lm(dislikes.count~title.disclosure+sub.number, data = total_videos_complete)
summary(overall.fit)
coef(overall.fit)
pR2(logreg)
logreg<-glm(title.disclosure~view.count+dislikes.count, family = "binomial", data = tanyatotalvideos)
pR2(logreg)
logreg<-glm(title.disclosure~dislikes.count+view.count+comments.count, family = "binomial", data = AnnaEditTotalVideos)
pR2(logreg)
logreg<-glm(title.disclosure~view.count+dislikes.count, family = "binomial", data = total_videos)
pR2(logreg)
X1<-sapply(total.ad.videos["view.count"], function(x) c(mean=mean(x), sd=sd(x)))
X2<-sapply(total.not.sponsored["view.count"], function(x) c(mean=mean(x), sd=sd(x)))
t.test(X1,X2)
total.not.sponsored.complete<-total.not.sponsored[complete.cases(total.not.sponsored),]
X1<-sapply(total.ad.videos["likes.count"], function(x) c(mean=mean(x), sd=sd(x)))
X2<-sapply(total.not.sponsored.complete["likes.count"], function(x) c(mean=mean(x), sd=sd(x)))
t.test(X1,X2)
X1<-sapply(total.ad.videos["dislikes.count"], function(x) c(mean=mean(x), sd=sd(x)))
X2<-sapply(total.not.sponsored.complete["dislikes.count"], function(x) c(mean=mean(x), sd=sd(x)))
t.test(X1,X2)
X1<-sapply(total.ad.videos["comments.count"], function(x) c(mean=mean(x), sd=sd(x)))
X2<-sapply(total.not.sponsored.complete["comments.count"], function(x) c(mean=mean(x), sd=sd(x)))
t.test(X1,X2)
fit<-lm(view.count~title.disclosure+sub.number, data = total_videos)
summary(fit)
total_videos_complete<-total_videos[complete.cases(total_videos),]
fit<-lm(likes.count~title.disclosure+sub.number, data = total_videos_complete)
summary(fit)
fit<-lm(view.count~title.disclosure+sub.number, data = total_videos)
summary(fit)
X1<-sapply(total.ad.videos["view.count"], function(x) c(mean=mean(x), sd=sd(x)))
X2<-sapply(total.not.sponsored["view.count"], function(x) c(mean=mean(x), sd=sd(x)))
t.test(X1,X2)
total.not.sponsored.complete<-total.not.sponsored[complete.cases(total.not.sponsored),]
X1<-sapply(total.ad.videos["likes.count"], function(x) c(mean=mean(x), sd=sd(x)))
X2<-sapply(total.not.sponsored.complete["likes.count"], function(x) c(mean=mean(x), sd=sd(x)))
t.test(X1,X2)
X1<-sapply(total.ad.videos["dislikes.count"], function(x) c(mean=mean(x), sd=sd(x)))
X2<-sapply(total.not.sponsored.complete["dislikes.count"], function(x) c(mean=mean(x), sd=sd(x)))
t.test(X1,X2)
X1<-sapply(total.ad.videos["comments.count"], function(x) c(mean=mean(x), sd=sd(x)))
X2<-sapply(total.not.sponsored.complete["comments.count"], function(x) c(mean=mean(x), sd=sd(x)))
t.test(X1,X2)
fit<-lm(view.count~title.disclosure+sub.number, data = total_videos)
summary(fit)
total_videos_complete<-total_videos[complete.cases(total_videos),]
overall.fit<-lm(likes.count~title.disclosure+sub.number, data = total_videos_complete)
summary(overall.fit)
overall.fit<-lm(dislikes.count~title.disclosure+sub.number, data = total_videos_complete)
summary(overall.fit)
overall.fit<-lm(comments.count~title.disclosure+sub.number, data = total_videos_complete)
summary(overall.fit)
logreg<-glm(title.disclosure~view.count+likes.count+dislikes.count+comments.count, family = "binomial", data = total_videos)
summary(logreg)
logreg<-glm(title.disclosure~view.count+dislikes.count, family = "binomial", data = total_videos)
summary(logreg)
library("pscl")
pR2(logreg)
McFadden
X1<-sapply(tanyaAd["view.count"], function(x) c(mean=mean(x), sd=sd(x)))
X2<-sapply(tanyaUNAD["view.count"], function(x) c(mean=mean(x), sd=sd(x)))
t.test(X1,X2)
tanya.unsponsored<-tanyaUNAD[complete.cases(tanyaUNAD),]
X1<-sapply(tanyaAd["likes.count"], function(x) c(mean=mean(x), sd=sd(x)))
X2<-sapply(tanya.unsponsored["likes.count"], function(x) c(mean=mean(x), sd=sd(x)))
t.test(X1,X2)
X1<-sapply(tanyaAd["dislikes.count"], function(x) c(mean=mean(x), sd=sd(x)))
X2<-sapply(tanya.unsponsored["dislikes.count"], function(x) c(mean=mean(x), sd=sd(x)))
t.test(X1,X2)
X1<-sapply(tanyaAd["comments.count"], function(x) c(mean=mean(x), sd=sd(x)))
X2<-sapply(tanya.unsponsored["comments.count"], function(x) c(mean=mean(x), sd=sd(x)))
t.test(X1,X2)
tanya_total_videos<-tanyatotalvideos[complete.cases(tanyatotalvideos),]
fit<-lm(view.count~title.disclosure, data = tanya_total_videos)
summary(fit)
fit<-lm(likes.count~title.disclosure, data = tanya_total_videos)
summary(fit)
fit<-lm(dislikes.count~title.disclosure, data = tanya_total_videos)
summary(fit)
fit<-lm(comments.count~title.disclosure, data = tanya_total_videos)
summary(fit)
logreg<-glm(title.disclosure~view.count+likes.count+dislikes.count+comments.count, family = "binomial", data = tanyatotalvideos)
summary(logreg)
logreg<-glm(title.disclosure~view.count+dislikes.count, family = "binomial", data = tanyatotalvideos)
summary(logreg)
pR2(logreg)
X1<-sapply(emilyAD["view.count"], function(x) c(mean=mean(x), sd=sd(x)))
X2<-sapply(Emilyunsponsored["view.count"], function(x) c(mean=mean(x), sd=sd(x)))
t.test(X1,X2)
X1<-sapply(emilyAD["likes.count"], function(x) c(mean=mean(x), sd=sd(x)))
X2<-sapply(Emilyunsponsored["likes.count"], function(x) c(mean=mean(x), sd=sd(x)))
t.test(X1,X2)
X1<-sapply(emilyAD["dislikes.count"], function(x) c(mean=mean(x), sd=sd(x)))
X2<-sapply(Emilyunsponsored["dislikes.count"], function(x) c(mean=mean(x), sd=sd(x)))
t.test(X1,X2)
X1<-sapply(emilyAD["comments.count"], function(x) c(mean=mean(x), sd=sd(x)))
X2<-sapply(Emilyunsponsored["comments.count"], function(x) c(mean=mean(x), sd=sd(x)))
t.test(X1,X2)
fit<-lm(view.count~title.disclosure, data = emilytotalvideos)
summary(fit)
fit<-lm(likes.count~title.disclosure, data = emilytotalvideos)
summary(fit)
fit<-lm(dislikes.count~title.disclosure, data = emilytotalvideos)
summary(fit)
fit<-lm(comments.count~title.disclosure, data = emilytotalvideos)
summary(fit)
logreg<-glm(title.disclosure~view.count+likes.count+dislikes.count+comments.count, family = "binomial", data = emilytotalvideos)
summary(logreg)
logreg<-glm(title.disclosure~dislikes.count, family = "binomial", data = emilytotalvideos)
summary(logreg)
pR2(logreg)
X1<-sapply(annaADvideos["view.count"], function(x) c(mean=mean(x), sd=sd(x)))
X2<-sapply(AnnaUnSponsored["view.count"], function(x) c(mean=mean(x), sd=sd(x)))
t.test(X1,X2)
X1<-sapply(annaADvideos["likes.count"], function(x) c(mean=mean(x), sd=sd(x)))
X2<-sapply(AnnaUnSponsored["likes.count"], function(x) c(mean=mean(x), sd=sd(x)))
t.test(X1,X2)
X1<-sapply(annaADvideos["dislikes.count"], function(x) c(mean=mean(x), sd=sd(x)))
X2<-sapply(AnnaUnSponsored["dislikes.count"], function(x) c(mean=mean(x), sd=sd(x)))
t.test(X1,X2)
X1<-sapply(annaADvideos["comments.count"], function(x) c(mean=mean(x), sd=sd(x)))
X2<-sapply(AnnaUnSponsored["comments.count"], function(x) c(mean=mean(x), sd=sd(x)))
t.test(X1,X2)
fit<-lm(view.count~title.disclosure, data = AnnaEditTotalVideos)
summary(fit)
fit<-lm(likes.count~title.disclosure, data = AnnaEditTotalVideos)
summary(fit)
fit<-lm(dislikes.count~title.disclosure, data = AnnaEditTotalVideos)
summary(fit)
fit<-lm(comments.count~title.disclosure, data = AnnaEditTotalVideos)
summary(fit)
logreg<-glm(title.disclosure~view.count+likes.count+dislikes.count+comments.count, family = "binomial", data = AnnaEditTotalVideos)
summary(logreg)
logreg<-glm(title.disclosure~dislikes.count+view.count+comments.count, family = "binomial", data = AnnaEditTotalVideos)
summary(logreg)
pR2(logreg)
McFadden
install.packages("TubeR")
combined<- read.csv ("combined.csv", header = TRUE)
combined<- read.csv ("combined.csv", header = TRUE)
install.packages("TubeR")
library(tuber)
setwd("~/Desktop/git/Social-Network-Analysis-Practice/Data Camp Course Practice Work")
library(igraph)
data<- friends
